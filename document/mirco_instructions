core只提供一个节拍的微命令
通用寄存器：R0~R3
指令寄存器：IR
指令计数器：PC
地址暂存器：MAR
数据暂存器：MDR
程序状态字：PSW
堆栈指针：SP
源暂存器：C
目的暂存器：D
内总线：IB
外总线地址线：AB
外总线数据线：DB
外总线控制线：CB
选择寄存器：A、B
运算器：ALU
移位器：SFT

微指令位设置
    AI  3bit    A选择暂存器写入
    BI  3bit    B选择暂存器写入
    SM  5bit    ALU功能选择
    Co  2bit    初始进位选择
    S   2bit    移位选择
    ZO  3bit    结果分配
    EMAR    1bit    使能MAR<->AB
    R   1bit    从DB读数据
    W   1bit    MDB写入
    ST  2bit    辅助操作
    SC  4bit    执行顺序选择

    total   27bit

        AI:
            000 无输入
            001 Ri >> A
            010 C >> A
            011 D >> A
            100 PC >> A
            101 SP >> A
        BI:
            000 无输入
            001 Ri >> B
            010 C >> B
            011 D >> B
            100 MDR >> B
            101 PSW >> B
        SM:
            bit 0  1  2  3  4
                S1 S2 S3 S4 M
            S1 
            S2
            S3
            S4
            M
        Co:
        S:
        ZO:
        EMAR:
            0 关闭
            1 使能
        R:
            0 关闭
            1 使能
        W:
            0 关闭
            1 使能
        ST:
            00 无操作
            01 开中断
            10 关中断
            11 SIR
        SC:
            0000 顺序执行
            0001 无条件转移
            0010 按操作码分支
            0011 
            0100
            0101
            0110
            0111 转微子程序
            1000 返回微主程序
            1001
            1010
            1011
            1100
            1101
            1110
            1111

微指令：
    R0/R1/R2/R3 >> A/B
    MDR/MAR >> B
    PC >> A
    SP >> A
    PSW >> B
    IR >> A
    C/D >> A/B

    ALU(ins, A, B) (A&B >> ALU >> SFT)
    SFT(ins, A, B) (SFT >> IB)

    IB >> MAR/MDR
    IB >> R0/R1/R2/R3
    IB >> SP
    IB >> PC
    IB >> C/D
    IB >> PSW
    IB >> IR
    MAR >> AB
    MDR >> DB
    DB >> MDR

